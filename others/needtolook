三数和问题：
      三叔和问题可以设置3个指针，i，j，k，i用来遍历一遍数组O（n）。j,k为双指针再次遍历一遍。寻找最优解。
      时间复杂度为O（n^2）
合并K个排序链表：
     1.k个指针。（时间复杂度为O（n-k））
     2.不断回溯归并相邻的两个链表   O（nlogk） 包括优先链表优化也无法突破
     3.快速排序  O（nlogn）也差不多
     但是这个问题是困难难度，应该还会有其他最优解，会查阅相关资料继续来完善
k个为一组翻转链表：
      ListNode* reverseKGroup(ListNode* head, int k){……}
      编写子函数用来反转k个结点：SORT（Listnode* head,int k）:这个函数实现将一个节点放到一个节点前端，实现反转(可以使用
                                                        递归思想，先将两个交换，然后再将一个结点放到一个链表的头部，执行k次即可)
                              而后，我们再将SORT中的head指向第k+1个结点实现第二部分的反转，再将第一部分的尾结点的next指向第2k个结点。（前后次序无关
